<?xml version="1.0"?>
<api>
  <!--

        This file was automatically generated.
        Please DO NOT MODIFY THIS FILE, modify .metadata files instead.

-->
  <namespace name="AppIndicator" library="libappindicator.so.0">
    <enum name="Category" cname="AppIndicatorCategory" gtype="app_indicator_category_get_type" type="enum">
      <member cname="APP_INDICATOR_CATEGORY_APPLICATION_STATUS" name="ApplicationStatus" />
      <member cname="APP_INDICATOR_CATEGORY_COMMUNICATIONS" name="Communications" />
      <member cname="APP_INDICATOR_CATEGORY_SYSTEM_SERVICES" name="SystemServices" />
      <member cname="APP_INDICATOR_CATEGORY_HARDWARE" name="Hardware" />
      <member cname="APP_INDICATOR_CATEGORY_OTHER" name="Other" />
    </enum>
    <enum name="Status" cname="AppIndicatorStatus" gtype="app_indicator_status_get_type" type="enum">
      <member cname="APP_INDICATOR_STATUS_PASSIVE" name="Passive" />
      <member cname="APP_INDICATOR_STATUS_ACTIVE" name="Active" />
      <member cname="APP_INDICATOR_STATUS_ATTENTION" name="Attention" />
    </enum>
    <callback name="OrgAyatanaIndicatorApplicationServiceGetApplicationsReply" cname="org_ayatana_indicator_application_service_get_applications_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="GPtrArray*" name="OUT_applications" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgFreedesktop_DBus_PropertiesGetAllReply" cname="org_freedesktop_DBus_Properties_get_all_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="GHashTable*" name="OUT_Properties" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgFreedesktop_DBus_PropertiesGetReply" cname="org_freedesktop_DBus_Properties_get_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="GValue" name="OUT_Value" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgFreedesktop_DBus_PropertiesSetReply" cname="org_freedesktop_DBus_Properties_set_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgKde_StatusNotifierWatcherIsNotificationHostRegisteredReply" cname="org_kde_StatusNotifierWatcher_is_notification_host_registered_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="gboolean" name="OUT_hasHost" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgKde_StatusNotifierWatcherProtocolVersionReply" cname="org_kde_StatusNotifierWatcher_protocol_version_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="char*" name="OUT_version" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgKde_StatusNotifierWatcherRegisterNotificationHostReply" cname="org_kde_StatusNotifierWatcher_register_notification_host_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgKde_StatusNotifierWatcherRegisterStatusNotifierItemReply" cname="org_kde_StatusNotifierWatcher_register_status_notifier_item_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <callback name="OrgKde_StatusNotifierWatcherRegisteredStatusNotifierItemsReply" cname="org_kde_StatusNotifierWatcher_registered_status_notifier_items_reply">
      <return-type type="void" />
      <parameters>
        <parameter type="DBusGProxy*" name="proxy" />
        <parameter type="char*" name="*" />
        <parameter type="GError*" name="error" />
        <parameter type="gpointer" name="userdata" />
      </parameters>
    </callback>
    <object name="ApplicationServiceAppstore" cname="ApplicationServiceAppstore" parent="GObject">
      <signal name="ApplicationAdded" cname="application-added" when="LAST" field_name="application_added">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceAppstore*" name="appstore" />
          <parameter type="gchar*" name="arg2" />
          <parameter type="gint" name="arg3" />
          <parameter type="gchar*" name="arg4" />
          <parameter type="gchar*" name="arg5" />
          <parameter type="gpointer" name="arg6" />
        </parameters>
      </signal>
      <signal name="ApplicationRemoved" cname="application-removed" when="LAST" field_name="application_removed">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceAppstore*" name="appstore" />
          <parameter type="gint" name="arg2" />
          <parameter type="gpointer" name="arg3" />
        </parameters>
      </signal>
      <signal name="ApplicationIconChanged" cname="application-icon-changed" when="LAST" field_name="application_icon_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceAppstore*" name="appstore" />
          <parameter type="gint" name="arg2" />
          <parameter type="const-gchar*" name="arg3" />
          <parameter type="gpointer" name="arg4" />
        </parameters>
      </signal>
      <method name="ApplicationAdd" cname="application_service_appstore_application_add">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="dbus_name" />
          <parameter type="const-gchar*" name="dbus_object" />
        </parameters>
      </method>
      <method name="ApplicationRemove" cname="application_service_appstore_application_remove">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="dbus_name" />
          <parameter type="const-gchar*" name="dbus_object" />
        </parameters>
      </method>
      <method name="GetType" cname="application_service_appstore_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="application_service_appstore_new">
        <parameters>
          <parameter type="AppLruFile*" name="lrufile" />
        </parameters>
      </constructor>
    </object>
    <object name="ApplicationServiceWatcher" cname="ApplicationServiceWatcher" parent="GObject">
      <signal name="ServiceRegistered" cname="service-registered" when="LAST" field_name="service_registered">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceWatcher*" name="watcher" />
          <parameter type="gchar*" name="object" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </signal>
      <signal name="ServiceUnregistered" cname="service-unregistered" when="LAST" field_name="service_unregistered">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceWatcher*" name="watcher" />
          <parameter type="gchar*" name="object" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </signal>
      <signal name="NotificationHostRegistered" cname="notification-host-registered" when="LAST" field_name="notification_host_registered">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceWatcher*" name="watcher" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </signal>
      <signal name="NotificationHostUnregistered" cname="notification-host-unregistered" when="LAST" field_name="notification_host_unregistered">
        <return-type type="void" />
        <parameters>
          <parameter type="ApplicationServiceWatcher*" name="watcher" />
          <parameter type="gpointer" name="data" />
        </parameters>
      </signal>
      <method name="GetType" cname="application_service_watcher_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="application_service_watcher_new">
        <parameters>
          <parameter type="ApplicationServiceAppstore*" name="appstore" />
        </parameters>
      </constructor>
    </object>
    <object name="AppIndicator" cname="AppIndicator" parent="GObject">
      <field name="Priv" cname="priv" type="AppIndicatorPrivate*" />
      <property name="PROP_ID_S" cname="PROP_ID_S" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="PROP_CATEGORY_S" cname="PROP_CATEGORY_S" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="PROP_STATUS_S" cname="PROP_STATUS_S" type="gchar*" readable="true" writeable="true" />
      <property name="PROP_ICON_NAME_S" cname="PROP_ICON_NAME_S" type="gchar*" readable="true" writeable="true" construct="true" />
      <property name="PROP_ATTENTION_ICON_NAME_S" cname="PROP_ATTENTION_ICON_NAME_S" type="gchar*" readable="true" writeable="true" />
      <property name="PROP_ICON_THEME_PATH_S" cname="PROP_ICON_THEME_PATH_S" type="gchar*" readable="true" writeable="true" construct-only="true" />
      <property name="PROP_MENU_S" cname="PROP_MENU_S" type="DbusGObjectPath" readable="true" />
      <property name="PROP_CONNECTED_S" cname="PROP_CONNECTED_S" type="gboolean" readable="true" />
      <signal when="LAST" field_name="new_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="AppIndicator*" name="indicator" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </signal>
      <signal when="LAST" field_name="new_attention_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="AppIndicator*" name="indicator" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </signal>
      <signal when="LAST" field_name="new_status">
        <return-type type="void" />
        <parameters>
          <parameter type="AppIndicator*" name="indicator" />
          <parameter type="const-gchar*" name="status" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </signal>
      <signal when="LAST" field_name="connection_changed">
        <return-type type="void" />
        <parameters>
          <parameter type="AppIndicator*" name="indicator" />
          <parameter type="gboolean" name="connected" />
          <parameter type="gpointer" name="user_data" />
        </parameters>
      </signal>
      <virtual_method name="Fallback" cname="fallback">
        <return-type type="GtkStatusIcon*" />
        <parameters>
          <parameter type="AppIndicator*" name="indicator" />
        </parameters>
      </virtual_method>
      <virtual_method name="Unfallback" cname="unfallback">
        <return-type type="void" />
        <parameters>
          <parameter type="AppIndicator*" name="indicator" />
          <parameter type="GtkStatusIcon*" name="status_icon" />
        </parameters>
      </virtual_method>
      <method name="GetAttentionIcon" cname="app_indicator_get_attention_icon">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetCategory" cname="app_indicator_get_category">
        <return-type type="AppIndicatorCategory" />
      </method>
      <method name="GetIcon" cname="app_indicator_get_icon">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetId" cname="app_indicator_get_id">
        <return-type type="const-gchar*" />
      </method>
      <method name="GetMenu" cname="app_indicator_get_menu">
        <return-type type="GtkMenu*" />
      </method>
      <method name="GetStatus" cname="app_indicator_get_status">
        <return-type type="AppIndicatorStatus" />
      </method>
      <method name="GetType" cname="app_indicator_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="app_indicator_new">
        <parameters>
          <parameter type="const-gchar*" name="id" />
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="AppIndicatorCategory" name="category" />
        </parameters>
      </constructor>
      <constructor cname="app_indicator_new_with_path">
        <parameters>
          <parameter type="const-gchar*" name="id" />
          <parameter type="const-gchar*" name="icon_name" />
          <parameter type="AppIndicatorCategory" name="category" />
          <parameter type="const-gchar*" name="icon_path" />
        </parameters>
      </constructor>
      <method name="SetAttentionIcon" cname="app_indicator_set_attention_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetIcon" cname="app_indicator_set_icon">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="icon_name" />
        </parameters>
      </method>
      <method name="SetMenu" cname="app_indicator_set_menu">
        <return-type type="void" />
        <parameters>
          <parameter type="GtkMenu*" name="menu" />
        </parameters>
      </method>
      <method name="SetStatus" cname="app_indicator_set_status">
        <return-type type="void" />
        <parameters>
          <parameter type="AppIndicatorStatus" name="status" />
        </parameters>
      </method>
    </object>
    <object name="AppLruFile" cname="AppLruFile" parent="GObject">
      <method name="GetType" cname="app_lru_file_get_type" shared="true">
        <return-type type="GType" />
      </method>
      <constructor cname="app_lru_file_new" />
      <method name="Sort" cname="app_lru_file_sort">
        <return-type type="gint" />
        <parameters>
          <parameter type="const-gchar*" name="id_a" />
          <parameter type="const-gchar*" name="id_b" />
        </parameters>
      </method>
      <method name="Touch" cname="app_lru_file_touch">
        <return-type type="void" />
        <parameters>
          <parameter type="const-gchar*" name="id" />
          <parameter type="const-gchar*" name="category" />
        </parameters>
      </method>
    </object>
  </namespace>
</api>